    #  Basic multinomial describing how white the population is by time

    model{

      elev_eff ~ dnorm(0, 0.001) #estimates cov.eff for all categories at once
      esnow_eff ~ dnorm(0, 0.001)

      for(i in 1:(nbins - 1)){
        alpha[i] ~ dnorm(0, 0.001)
      }

      for(i in 1:(nbins - 1)){
        beta[i] ~ dnorm(0, 0.001)
      }

      tau_cam ~ dunif(0, 100)
      sig_cam <- 1/sqrt(tau_cam)

      for(c in 1:ncam){
        cam_eff[c] ~ dnorm(0, tau_cam)
      } #estimates cam_eff for all categories at once

      for(c in 1:ncam){
        for(d in 1:ndays){
          log(p_exp[1,c,d]) <- alpha[1] +
            beta[1] * d +
            cam_eff[c] +
            elev_eff * elev[c]

          log(p_exp[2,c,d]) <- alpha[2] +
            beta[2] * d +
            cam_eff[c]+
            esnow_eff * snow[c]
          log(p_exp[3,c,d]) <- 0 +
            cam_eff[c] +

          p_sum[c,d] <- sum(p_exp[,c,d])

          p[1,c,d] <- p_exp[1,c,d]/p_sum[c,d]
          p[2,c,d] <- p_exp[2,c,d]/p_sum[c,d]
          p[3,c,d] <- p_exp[3,c,d]/p_sum[c,d]
        }
      }

      for(i in 1:nobs){
        y[i] ~ dcat(p[,cam[i],day[i]])
      }

      #  Derived to strip off random camera effect
      for(d in 1:ndays){
        log(pp_exp[1,d]) <- alpha[1] +
          beta[1] * d
        log(pp_exp[2,d]) <- alpha[2] +
          beta[2] * d
        log(pp_exp[3,d]) <- 0

        pp_sum[d] <- sum(pp_exp[,d])

        pp[1,d] <- pp_exp[1,d]/pp_sum[d]
        pp[2,d] <- pp_exp[2,d]/pp_sum[d]
        pp[3,d] <- pp_exp[3,d]/pp_sum[d]
      }
    }

elev = as.numeric(hares$Elevation)
)
parms <- c(
"pp", "beta", "alpha", "sigma", "rho", "p_rand"
#, "elev_eff", "cat_mu"
)
out <- jags.parallel(
data = dat,
inits = NULL,
parameters.to.save = parms,
model.file = "models/multinom.txt",
n.chains = 3,
n.iter = 10000,
n.burnin = 5000,
n.thin = 3
)
starts <- apply(out$BUGS$sims.list$pp[,3,], 1, function(x){
min(which(x < 0.9))
})
hist(starts, xlab = "Day")
quantile(starts, c(0.025, 0.5, 0.975))
ends <- apply(out$BUGS$sims.list$pp[,1,], 1, function(x){
min(which(x > 0.9))
})
hist(ends, xlab = "Day")
quantile(ends, c(0.025, 0.5, 0.975))
mids <- apply(out$BUGS$sims.list$pp[,2,], 1, function(x){
min(which(x == max(x)))
})
hist(mids, xlab = "Day")
quantile(mids, c(0.025, 0.5, 0.975))
plot(0, 0,
type = "n",
col = "red",
ylim = c(-.1, 1.1),
xlim = c(0, 200),
xlab = "Time",
ylab = "Probability of being in bin 'x'",
bty = "l"
)
day_seq <- 1:dim(out$BUGS$mean$pp)[2]
points(hares$Julian, jitter(hares$White3/100), pch = 19, cex = 1, col = "gray90")
for(i in 1:3){
lines(day_seq, out$BUGS$mean$pp[i,], col = i, type = "l")
}
abline(v=c(quantile(starts, 0.5), quantile(ends, 0.5), quantile(mids, 0.5)))
hist(starts, add = T, freq = F, col = "green", border = "green")
hist(ends, add = T, freq = F, col = "black", border = "black")
hist(mids, add = T, freq = F, col = "red", border = "red")
out.sum <- out$BUGS$summary
write.table(out.sum, file="/Users/marketzimova/Documents/WORK/DISSERTATION/GitHub/results/SSH/out2015_multinom_prand.monit_NH3.csv",sep=",")
starts <- apply(out$BUGS$sims.list$pp[,3,], 1, function(x){
min(which(x < 0.9))
});  quantile(starts, c(0.025, 0.5, 0.975))
plot(0, 0,
type = "n",
col = "red",
ylim = c(-.1, 1.1),
xlim = c(0, 200),
xlab = "Time",
ylab = "Probability of being in bin 'x'",
bty = "l"
)
day_seq <- 1:dim(out$BUGS$mean$pp)[2]
pr_dim <- dim(out$BUGS$mean$p_rand)
ncamera <- pr_dim[2]
ncategories <- pr_dim[1]
nday <- pr_dim[3]
mat <- expand.grid(
cats = 1:ncategories,
cam = 1:ncamera,
day = day_seq
)
for(i in 1:nrow(mat)){
mat$bin_prob[i] <- out$BUGS$mean$p_rand[
mat$cats[i],
mat$cam[i],
mat$day[i]
]
}
mat
points(hares$Julian, jitter(hares$White3/100), pch = 19, cex = 1, col = "gray90")
for(i in 1:ncategories){
for(j in 1:ncamera){
lines(day_seq, out$BUGS$mean$p_rand[i,j,], col = i, type = "l")
}
}
hist(out$BUGS$sims.list$sigma[,1], breaks = 200)
hist(out$BUGS$sims.list$sigma[,2], breaks = 200)
setwd("/Users/marketzimova/Documents/WORK/DISSERTATION/GitHub/multinomial_molt_analysis/SSH_camera_traps")
jjn <- "/Users/marketzimova/Documents/WORK/DISSERTATION/GitHub/data/SSH/NH_hare_data2.csv"
source("code/utility_functions.R")
rawd <- read_csv(
jjn,
col_types = "ccciiccccciicciccc"
)
hares <- morph_data(rawd) %>%
filter(
Season == "Spring",
Year == 2015
)
time_scale <- "Julian"
load.module("glm")
days <- as.integer(unlist(hares[,time_scale]))
first_day <- min(days)
last_day <- max(days)
response <- cut(hares$White3, 3, labels = 1:3)
inits <- function(){
list(
alpha = rnorm(3)
)
}
dat <- list(
nobs = nrow(hares),
day = days,
cam = as.numeric(as.factor(hares$CameraNum)),
y = response,
nbins = 3,
ndays = last_day,
ncam = length(unique(hares$CameraNum)),
elev = as.numeric(hares$Elevation)
)
parms <- c(
"pp", "beta", "alpha", "sigma", "rho", "p_rand"
#, "elev_eff", "cat_mu"
)
out <- jags.parallel(
data = dat,
inits = NULL,
parameters.to.save = parms,
model.file = "models/multinom_mvn.txt",
n.chains = 3,
n.iter = 10000,
n.burnin = 5000,
n.thin = 3
)
print(out)
starts <- apply(out$BUGS$sims.list$pp[,3,], 1, function(x){
min(which(x < 0.9))
})
hist(starts, xlab = "Day")
quantile(starts, c(0.025, 0.5, 0.975))
ends <- apply(out$BUGS$sims.list$pp[,1,], 1, function(x){
min(which(x > 0.9))
})
hist(ends, xlab = "Day")
quantile(ends, c(0.025, 0.5, 0.975))
mids <- apply(out$BUGS$sims.list$pp[,2,], 1, function(x){
min(which(x == max(x)))
})
hist(mids, xlab = "Day")
quantile(mids, c(0.025, 0.5, 0.975))
plot(0, 0,
type = "n",
col = "red",
ylim = c(-.1, 1.1),
xlim = c(0, 200),
xlab = "Time",
ylab = "Probability of being in bin 'x'",
bty = "l"
)
day_seq <- 1:dim(out$BUGS$mean$pp)[2]
points(hares$Julian, jitter(hares$White3/100), pch = 19, cex = 1, col = "gray90")
for(i in 1:3){
lines(day_seq, out$BUGS$mean$pp[i,], col = i, type = "l")
}
abline(v=c(quantile(starts, 0.5), quantile(ends, 0.5), quantile(mids, 0.5)))
hist(starts, add = T, freq = F, col = "green", border = "green")
hist(ends, add = T, freq = F, col = "black", border = "black")
hist(mids, add = T, freq = F, col = "red", border = "red")
out.sum <- out$BUGS$summary
write.table(out.sum, file="/Users/marketzimova/Documents/WORK/DISSERTATION/GitHub/results/SSH/out2015_mvn_prand.monit_NH2.csv",sep=",")
starts <- apply(out$BUGS$sims.list$pp[,3,], 1, function(x){
min(which(x < 0.9))
});  quantile(starts, c(0.025, 0.5, 0.975))
plot(0, 0,
type = "n",
col = "red",
ylim = c(-.1, 1.1),
xlim = c(0, 200),
xlab = "Time",
ylab = "Probability of being in bin 'x'",
bty = "l"
)
day_seq <- 1:dim(out$BUGS$mean$pp)[2]
pr_dim <- dim(out$BUGS$mean$p_rand)
ncamera <- pr_dim[2]
ncategories <- pr_dim[1]
nday <- pr_dim[3]
mat <- expand.grid(
cats = 1:ncategories,
cam = 1:ncamera,
day = day_seq
)
for(i in 1:nrow(mat)){
mat$bin_prob[i] <- out$BUGS$mean$p_rand[
mat$cats[i],
mat$cam[i],
mat$day[i]
]
}
mat
points(hares$Julian, jitter(hares$White3/100), pch = 19, cex = 1, col = "gray90")
for(i in 1:ncategories){
for(j in 1:ncamera){
lines(day_seq, out$BUGS$mean$p_rand[i,j,], col = i, type = "l")
}
}
hist(out$BUGS$sims.list$sigma[,1], breaks = 200)
#############################################################################
#  Set working directory
#setwd("C:/Users/josh.nowak/Documents/GitHub/multinomial_molt_analysis/SSH_camera_traps")
setwd("/Users/marketzimova/Documents/WORK/DISSERTATION/GitHub/multinomial_molt_analysis/SSH_camera_traps")
#  Path to data
#jjn <- "C:/Temp/NH_hare_data2.csv"
jjn <- "/Users/marketzimova/Documents/WORK/DISSERTATION/GitHub/data/SSH/NH_hare_data2.csv"
#/Users/marketzimova/Documents/WORK/DISSERTATION/GitHub/data/SSH
#  Source functions
source("code/utility_functions.R")
################################################################################
#  Load data
rawd <- read_csv(
jjn,
col_types = "ccciiccccciicciccc"
)
################################################################################
#  Morph raw data
hares <- morph_data(rawd) %>%
filter(
Season == "Spring",
Year == 2015
)
################################################################################
#  Call a single model step by step - mimics jags_call
#  Set time_scale for the analysis
#  Options are in the column names of hares, Month, Week, Julian
time_scale <- "Julian"
load.module("glm")
#  Subset to days - to reduce redundancy and ease inits and data create
days <- as.integer(unlist(hares[,time_scale]))
first_day <- min(days)
last_day <- max(days)
#  Create categorical response
response <- cut(hares$White3, 3, labels = 1:3)
#  Inits
inits <- function(){
list(
alpha = rnorm(3)
)
}
#  Gather data
dat <- list(
nobs = nrow(hares),
day = days,
cam = as.numeric(as.factor(hares$CameraNum)),
y = response,
nbins = 3,
ndays = last_day,
ncam = length(unique(hares$CameraNum)),
elev = as.numeric(hares$Elevation)
)
# Parameters to monitor
parms <- c(
"pp", "beta", "alpha", "sigma", "rho", "p_rand"
#, "elev_eff", "cat_mu"
)
#  Call jags
out <- jags.parallel(
data = dat,
inits = NULL,
parameters.to.save = parms,
model.file = "models/multinom.txt",
n.chains = 3,
n.iter = 10000,
n.burnin = 5000,
n.thin = 3
)
################################################################################
#options(max.print=100000) #extend maximum for print
print(out)
#out$BUGS$mean$cat_mu
#  Find start dates
starts <- apply(out$BUGS$sims.list$pp[,3,], 1, function(x){
min(which(x < 0.9))
})
hist(starts, xlab = "Day")
quantile(starts, c(0.025, 0.5, 0.975))
#  Find end dates
ends <- apply(out$BUGS$sims.list$pp[,1,], 1, function(x){
min(which(x > 0.9))
})
hist(ends, xlab = "Day")
quantile(ends, c(0.025, 0.5, 0.975))
#  Find mid-points
mids <- apply(out$BUGS$sims.list$pp[,2,], 1, function(x){
min(which(x == max(x)))
})
hist(mids, xlab = "Day")
quantile(mids, c(0.025, 0.5, 0.975))
#Plot start and end dates and mean pps
plot(0, 0,
type = "n",
col = "red",
ylim = c(-.1, 1.1),
xlim = c(0, 200),
xlab = "Time",
ylab = "Probability of being in bin 'x'",
bty = "l"
)
day_seq <- 1:dim(out$BUGS$mean$pp)[2]
points(hares$Julian, jitter(hares$White3/100), pch = 19, cex = 1, col = "gray90")
for(i in 1:3){
lines(day_seq, out$BUGS$mean$pp[i,], col = i, type = "l")
}
abline(v=c(quantile(starts, 0.5), quantile(ends, 0.5), quantile(mids, 0.5)))
hist(starts, add = T, freq = F, col = "green", border = "green")
hist(ends, add = T, freq = F, col = "black", border = "black")
hist(mids, add = T, freq = F, col = "red", border = "red")
starts <- apply(out$BUGS$sims.list$pp[,3,], 1, function(x){
min(which(x < 0.9))
});  quantile(starts, c(0.025, 0.5, 0.975))
plot(0, 0,
type = "n",
col = "red",
ylim = c(-.1, 1.1),
xlim = c(0, 200),
xlab = "Time",
ylab = "Probability of being in bin 'x'",
bty = "l"
)
day_seq <- 1:dim(out$BUGS$mean$pp)[2]
pr_dim <- dim(out$BUGS$mean$p_rand)
ncamera <- pr_dim[2]
ncategories <- pr_dim[1]
nday <- pr_dim[3]
mat <- expand.grid(
cats = 1:ncategories,
cam = 1:ncamera,
day = day_seq
)
for(i in 1:nrow(mat)){
mat$bin_prob[i] <- out$BUGS$mean$p_rand[
mat$cats[i],
mat$cam[i],
mat$day[i]
]
}
mat
points(hares$Julian, jitter(hares$White3/100), pch = 19, cex = 1, col = "gray90")
for(i in 1:ncategories){
for(j in 1:ncamera){
lines(day_seq, out$BUGS$mean$p_rand[i,j,], col = i, type = "l")
}
}
hist(out$BUGS$sims.list$sigma[,1], breaks = 200)
#  Multinomial analysis to calculate molt start and end dates
#     (and covariates effects) in SHH
# 3 categories of molt
# Random effects on camera traps
#  06/2017
#  Josh Nowak
################################################################################
library(R2jags)
library(readr)
library(purrr)
library(dplyr)
################################################################################
#  Set working directory
#setwd("C:/Users/josh.nowak/Documents/GitHub/multinomial_molt_analysis/SSH_camera_traps")
setwd("/Users/marketzimova/Documents/WORK/DISSERTATION/GitHub/multinomial_molt_analysis/SSH_camera_traps")
#  Path to data
#jjn <- "C:/Temp/NH_hare_data2.csv"
jjn <- "/Users/marketzimova/Documents/WORK/DISSERTATION/GitHub/data/SSH/NH_hare_data2.csv"
#/Users/marketzimova/Documents/WORK/DISSERTATION/GitHub/data/SSH
#  Source functions
source("code/utility_functions.R")
################################################################################
#  Load data
rawd <- read_csv(
jjn,
col_types = "ccciiccccciicciccc"
)
################################################################################
#  Morph raw data
hares <- morph_data(rawd) %>%
filter(
Season == "Spring",
Year == 2015
)
################################################################################
#  Call a single model step by step - mimics jags_call
#  Set time_scale for the analysis
#  Options are in the column names of hares, Month, Week, Julian
time_scale <- "Julian"
load.module("glm")
#  Subset to days - to reduce redundancy and ease inits and data create
days <- as.integer(unlist(hares[,time_scale]))
first_day <- min(days)
last_day <- max(days)
#  Create categorical response
response <- cut(hares$White3, 3, labels = 1:3)
#  Inits
inits <- function(){
list(
alpha = rnorm(3)
)
}
#  Gather data
dat <- list(
nobs = nrow(hares),
day = days,
cam = as.numeric(as.factor(hares$CameraNum)),
y = response,
nbins = 3,
ndays = last_day,
ncam = length(unique(hares$CameraNum)),
elev = as.numeric(hares$Elevation)
)
# Parameters to monitor
parms <- c(
"pp", "beta", "alpha", "sigma", "rho", "p_rand"
#, "elev_eff", "cat_mu"
)
#  Call jags
out <- jags.parallel(
data = dat,
inits = NULL,
parameters.to.save = parms,
model.file = "models/multinom_mvn.txt",
n.chains = 3,
n.iter = 10000,
n.burnin = 5000,
n.thin = 3
)
###############################
print(out)
starts <- apply(out$BUGS$sims.list$pp[,3,], 1, function(x){
min(which(x < 0.9))
})
hist(starts, xlab = "Day")
quantile(starts, c(0.025, 0.5, 0.975))
ends <- apply(out$BUGS$sims.list$pp[,1,], 1, function(x){
min(which(x > 0.9))
})
hist(ends, xlab = "Day")
quantile(ends, c(0.025, 0.5, 0.975))
mids <- apply(out$BUGS$sims.list$pp[,2,], 1, function(x){
min(which(x == max(x)))
})
hist(mids, xlab = "Day")
quantile(mids, c(0.025, 0.5, 0.975))
plot(0, 0,
type = "n",
col = "red",
ylim = c(-.1, 1.1),
xlim = c(0, 200),
xlab = "Time",
ylab = "Probability of being in bin 'x'",
bty = "l"
)
day_seq <- 1:dim(out$BUGS$mean$pp)[2]
points(hares$Julian, jitter(hares$White3/100), pch = 19, cex = 1, col = "gray90")
for(i in 1:3){
lines(day_seq, out$BUGS$mean$pp[i,], col = i, type = "l")
}
abline(v=c(quantile(starts, 0.5), quantile(ends, 0.5), quantile(mids, 0.5)))
hist(starts, add = T, freq = F, col = "green", border = "green")
hist(ends, add = T, freq = F, col = "black", border = "black")
hist(mids, add = T, freq = F, col = "red", border = "red")
out.sum <- out$BUGS$summary
starts <- apply(out$BUGS$sims.list$pp[,3,], 1, function(x){
min(which(x < 0.9))
});  quantile(starts, c(0.025, 0.5, 0.975))
plot(0, 0,
type = "n",
col = "red",
ylim = c(-.1, 1.1),
xlim = c(0, 200),
xlab = "Time",
ylab = "Probability of being in bin 'x'",
bty = "l"
)
day_seq <- 1:dim(out$BUGS$mean$pp)[2]
pr_dim <- dim(out$BUGS$mean$p_rand)
ncamera <- pr_dim[2]
ncategories <- pr_dim[1]
nday <- pr_dim[3]
mat <- expand.grid(
cats = 1:ncategories,
cam = 1:ncamera,
day = day_seq
)
for(i in 1:nrow(mat)){
mat$bin_prob[i] <- out$BUGS$mean$p_rand[
mat$cats[i],
mat$cam[i],
mat$day[i]
]
}
mat
points(hares$Julian, jitter(hares$White3/100), pch = 19, cex = 1, col = "gray90")
for(i in 1:ncategories){
for(j in 1:ncamera){
lines(day_seq, out$BUGS$mean$p_rand[i,j,], col = i, type = "l")
}
}
hist(out$BUGS$sims.list$sigma[,1], breaks = 200)
hist(out$BUGS$sims.list$sigma[,2], breaks = 200)
hist(out$BUGS$sims.list$rho, breaks = 200)
starts <- apply(out$BUGS$sims.list$pp[,3,], 1, function(x){
min(which(x < 0.9))
});  quantile(starts, c(0.025, 0.5, 0.975))

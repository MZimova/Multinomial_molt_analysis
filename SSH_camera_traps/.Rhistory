library(R2jags)
library(readr)
library(purrr)
library(dplyr)
setwd("/Users/marketzimova/Documents/WORK/DISSERTATION/GitHub/multinomial_molt_analysis/SSH_camera_traps")
jjn <- "/Users/marketzimova/Documents/WORK/DISSERTATION/GitHub/data/SSH/NH_hare_data2.csv"
source("code/utility_functions.R")
rawd <- read_csv(
jjn,
col_types = "ccciiccccciicciccc"
)
hares <- morph_data(rawd) %>%
filter(
Season == "Spring",
Year == 2014
)
time_scale <- "Julian"
load.module("glm")
days <- as.integer(unlist(hares[,time_scale]))
first_day <- min(days)
last_day <- max(days)
response <- cut(hares$White, 3, labels = 1:3)
View(hares)
summary(response)
response <- cut(hares$White3, 3, labels = 1:3)
summary(response)
rawd <- read_csv(
jjn,
col_types = "ccciiccccciicciccc"
)
hares <- morph_data(rawd) %>%
filter(
Season == "Spring",
Year == 2014
)
setwd("/Users/marketzimova/Documents/WORK/DISSERTATION/GitHub/multinomial_molt_analysis/SSH_camera_traps")
jjn <- "/Users/marketzimova/Documents/WORK/DISSERTATION/GitHub/data/SSH/NH_hare_data2.csv"
source("code/utility_functions.R")
rawd <- read_csv(
jjn,
col_types = "ccciiccccciicciccc"
)
hares <- morph_data(rawd) %>%
filter(
Season == "Spring",
Year == 2014
)
time_scale <- "Julian"
load.module("glm")
days <- as.integer(unlist(hares[,time_scale]))
first_day <- min(days)
last_day <- max(days)
response <- cut(hares$White3, 3, labels = 1:3)
summary(response)
response <- cut(hares$White3, 3, labels = 1:3)
inits <- function(){
list(
alpha = rnorm(3)
)
}
dat <- list(
nobs = nrow(hares),
day = days,
cam = as.numeric(as.factor(hares$CameraNum)),
y = response,
nbins = 3,
ndays = last_day,
ncam = length(unique(hares$CameraNum)),
elev = as.numeric(hares$Elevation)
)
parms <- c(
"pp", "beta", "alpha", "elev_eff", "sigma", "rho",
"cat_mu"
)
out <- jags(
data = dat,
inits = NULL,
parameters.to.save = parms,
model.file = "models/multinom_mvn.txt",
n.chains = 3,
n.iter = 2000,
n.burnin = 1000,
n.thin = 3
)
options(max.print=100000) #extend maximum for print
print(out)
out$BUGS$mean$tau_cam
out$BUGS$mean$cat_mu
starts <- apply(out$BUGS$sims.list$pp[,3,], 1, function(x){
min(which(x < 0.9))
})
hist(starts, xlab = "Day")
quantile(starts, c(0.025, 0.5, 0.975))
ends <- apply(out$BUGS$sims.list$pp[,1,], 1, function(x){
min(which(x > 0.9))
})
hist(ends, xlab = "Day")
quantile(ends, c(0.025, 0.5, 0.975))
plot(0, 0,
type = "n",
col = "red",
ylim = c(-.1, 1.1),
xlim = c(0, 200),
xlab = "Time",
ylab = "Probability of being in bin 'x'",
bty = "l"
)
day_seq <- 1:dim(out$BUGS$mean$pp)[2]
for(i in 1:3){
lines(day_seq, out$BUGS$mean$pp[i,], col = i, type = "l")
}
points(hares$Julian, jitter(hares$White/100), pch = 19, cex = 1, col = "gray90")
points(hares$Julian, jitter(hares$White3/100), pch = 19, cex = 1, col = "gray60")
abline(v=c(90,159),col = "gray90")
abline(v=c(quantile(starts, 0.5), quantile(ends, 0.5)))
hist(starts, add = T, freq = F, col = "green", border = "green")
hist(ends, add = T, freq = F, col = "black", border = "black")
hist(out$BUGS$sims.list$elev_eff[1,], breaks = 50)
points(hares$Julian, jitter(hares$White3/100), pch = 19, cex = 1, col = "gray60")
abline(v=c(quantile(starts, 0.5), quantile(ends, 0.5)))
hist(starts, add = T, freq = F, col = "green", border = "green")
hist(ends, add = T, freq = F, col = "black", border = "black")
hist(out$BUGS$sims.list$elev_eff[1,], breaks = 50)
plot(0, 0,
type = "n",
col = "red",
ylim = c(-.1, 1.1),
xlim = c(0, 200),
xlab = "Time",
ylab = "Probability of being in bin 'x'",
bty = "l"
)
day_seq <- 1:dim(out$BUGS$mean$pp)[2]
pr_dim <- dim(out$BUGS$mean$p_rand)
ncamera <- pr_dim[2]
ncategories <- pr_dim[1]
nday <- pr_dim[3]
mat <- expand.grid(
cats = 1:ncategories,
cam = 1:ncamera,
day = day_seq
)
for(i in 1:nrow(mat)){
mat$bin_prob[i] <- out$BUGS$mean$p_rand[
mat$cats[i],
mat$cam[i],
mat$day[i]
]
}
for(i in 1:ncategories){
for(j in 1:ncamera){
lines(day_seq, out$BUGS$mean$p_rand[i,j,], col = i, type = "l")
}
}
points(hares$Julian, jitter(hares$White/100), pch = 19, cex = 1, col = "gray90")
out.sum <- out$BUGS$summary
write.table(out.sum, file="out2014.csv",sep=",") #writes csv with results
mat
for(i in 1:nrow(mat)){
mat$bin_prob[i] <- out$BUGS$mean$p_rand[
mat$cats[i],
mat$cam[i],
mat$day[i]
]
}
mat
for(i in 1:nrow(mat)){
mat$bin_prob[i] <- out$BUGS$mean$p_rand[
mat$cats[i],
mat$cam[i],
mat$day[i]
]
}
starts <- apply(out$BUGS$sims.list$pp[,3,], 1, function(x){
min(which(x < 0.9))
})
hist(starts, xlab = "Day")
quantile(starts, c(0.025, 0.5, 0.975))
ends <- apply(out$BUGS$sims.list$pp[,1,], 1, function(x){
min(which(x > 0.9))
})
hist(ends, xlab = "Day")
quantile(ends, c(0.025, 0.5, 0.975))
plot(0, 0,
type = "n",
col = "red",
ylim = c(-.1, 1.1),
xlim = c(0, 200),
xlab = "Time",
ylab = "Probability of being in bin 'x'",
bty = "l"
)
plot(0, 0,
type = "n",
col = "red",
ylim = c(-.1, 1.1),
xlim = c(0, 200),
xlab = "Time",
ylab = "Probability of being in bin 'x'",
bty = "l"
)
day_seq <- 1:dim(out$BUGS$mean$pp)[2]
for(i in 1:3){
lines(day_seq, out$BUGS$mean$pp[i,], col = i, type = "l")
}
points(hares$Julian, jitter(hares$White/100), pch = 19, cex = 1, col = "gray90")
points(hares$Julian, jitter(hares$White3/100), pch = 19, cex = 1, col = "gray60")
abline(v=c(quantile(starts, 0.5), quantile(ends, 0.5)))
day_seq <- 1:dim(out$BUGS$mean$pp)[2]
for(i in 1:3){
lines(day_seq, out$BUGS$mean$pp[i,], col = i, type = "l")
}
points(hares$Julian, jitter(hares$White3/100), pch = 19, cex = 1, col = "gray90")
abline(v=c(quantile(starts, 0.5), quantile(ends, 0.5)))
hist(starts, add = T, freq = F, col = "green", border = "green")
hist(ends, add = T, freq = F, col = "black", border = "black")
hist(out$BUGS$sims.list$elev_eff[1,], breaks = 50)
parms <- c(
"pp", "beta", "alpha", "elev_eff", "sigma", "rho", "p_rand",
"cat_mu"
)
out <- jags(
data = dat,
inits = NULL,
parameters.to.save = parms,
model.file = "models/multinom_mvn.txt",
n.chains = 3,
n.iter = 2000,
n.burnin = 1000,
n.thin = 3
)
